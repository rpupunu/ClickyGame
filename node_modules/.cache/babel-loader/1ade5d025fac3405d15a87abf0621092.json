{"ast":null,"code":"var _jsxFileName = \"/Users/Pupunu/Documents/BOOTCamp/Homework/ClickyGame/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport friends from \"./friends.json\";\nimport update from \"immutability-helper\";\nimport PicsCard from \"./components/PicsCard\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topScore: 0,\n      score: 0,\n      headerText: \"Don't click on the same image twice!\",\n      friends\n    };\n\n    this.handleClick = friendsID => {\n      console.log(friendsID);\n      let friendArr = this.state.friends;\n\n      for (let i = 0; i < friendArr.length; i++) {\n        if (friendsID === friendArr[i].id) {\n          if (friendArr[i].clicked === false) {\n            this.setState({\n              // update state of image to true\n              score: this.state.score + 1,\n              friends: update(this.state.friends, {\n                [i]: {\n                  clicked: {\n                    $set: true\n                  }\n                }\n              }),\n              headerText: \"You guessed correctly!\"\n            }); // Reset game\n          } else {\n            if (this.state.score > this.state.topScore) {\n              this.setState({\n                topScore: this.state.score,\n                score: 0,\n                headerText: \"Wrong! You guessed incorrectly\",\n                friends\n              }, () => {\n                console.log('Updated new top score!');\n              });\n            }\n\n            if (this.state.score <= this.state.topScore) {\n              this.setState({\n                score: 0,\n                headerText: \"You guessed wrong!\",\n                friends\n              }, () => {\n                console.log('Reset the game, you did not beat the top score!');\n              });\n            }\n          }\n        }\n      }\n    };\n\n    this.shuffleArray = array => {\n      // let i = array.length - 1;\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      return array;\n    };\n  }\n\n  // Map over this.state.friends and render a PicsCard component for each friend object\n  render() {\n    let characterCards = this.state.friends.map(friends => React.createElement(PicsCard, {\n      name: friends.name,\n      image: friends.image,\n      key: friends.id,\n      id: friends.id,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      headerText: this.state.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.shuffleArray(characterCards)), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Pupunu/Documents/BOOTCamp/Homework/ClickyGame/src/App.js"],"names":["React","Component","Header","Wrapper","Footer","friends","update","PicsCard","App","state","topScore","score","headerText","handleClick","friendsID","console","log","friendArr","i","length","id","clicked","setState","$set","shuffleArray","array","j","Math","floor","random","temp","render","characterCards","map","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport friends from \"./friends.json\";\nimport update from \"immutability-helper\";\nimport PicsCard from \"./components/PicsCard\";\n\nclass App extends Component {\n  state = {\n    topScore: 0,\n    score: 0,\n    headerText: \"Don't click on the same image twice!\",\n    friends\n  }\n\n  // Click function to set state of image to true if clicked and reset game it image is already set to true\n  handleClick = friendsID => {\n    console.log(friendsID);\n\n    let friendArr = this.state.friends;\n\n    for(let i = 0; i < friendArr.length; i++) {\n\n      if(friendsID === friendArr[i].id) {\n\n        if(friendArr[i].clicked === false){\n\n          this.setState({\n            // update state of image to true\n            score: this.state.score +1,\n            friends: update(this.state.friends, {[i]: {clicked: {$set: true }}}),\n            headerText: \"You guessed correctly!\"\n\n          })\n          // Reset game\n        } else {\n\n          if(this.state.score > this.state.topScore) {\n            this.setState({\n              topScore: this.state.score,\n              score: 0,\n              headerText: \"Wrong! You guessed incorrectly\",\n              friends\n            },\n            () => {\n              console.log('Updated new top score!')\n            });\n\n          }\n\n          if(this.state.score <= this.state.topScore) {\n            this.setState({\n              score: 0,\n              headerText: \"You guessed wrong!\",\n              friends\n            },\n\n            () => {\n              console.log('Reset the game, you did not beat the top score!')\n            });\n          }\n\n        }\n      }\n    }\n\n  };\n// suffle the array each time image is clicked\n  shuffleArray = array => {\n    // let i = array.length - 1;\n    for(let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  \n\n  // Map over this.state.friends and render a PicsCard component for each friend object\n  render() {\n  \n\n      let characterCards = this.state.friends.map((friends) =>\n        <PicsCard\n          name = {friends.name}\n          image = {friends.image}\n          key = {friends.id}\n          id = {friends.id}\n          handleClick = {this.handleClick}\n          />\n      )\n\n      return (\n      <div>\n        <Header score={this.state.score} topScore = {this.state.topScore} headerText = {this.state.headerText}/>\n          <Wrapper>\n            {this.shuffleArray(characterCards)}\n          </Wrapper>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}