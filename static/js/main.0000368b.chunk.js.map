{"version":3,"sources":["components/Header/index.js","components/Wrapper/index.js","components/Footer/index.js","components/PicsCard/index.js","App.js","index.js"],"names":["Header","props","className","id","headerText","score","topScore","Wrapper","children","Footer","PicsCard","alt","name","src","image","onClick","handleClick","App","state","friends","friendsID","console","log","friendArr","i","length","clicked","setState","update","$set","shuffleArray","array","j","Math","floor","random","temp","characterCards","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ylEAaeA,MAVf,SAAgBC,GACZ,OACI,yBAAKC,UAAU,UACX,uBAAGC,GAAG,cAAN,sBACA,uBAAGA,GAAG,gBAAgBF,EAAMG,YAC5B,uBAAGD,GAAG,eAAN,UAA4BF,EAAMI,MAAlC,iBAAuDJ,EAAMK,SAA7D,O,MCDGC,MAJf,SAAiBN,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMO,W,MCO1BC,MARf,WACI,OACI,yBAAKP,UAAU,UACX,uBAAGC,GAAG,cAAN,sB,6BCOGO,MAVf,SAAkBT,GAChB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKS,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,MAAOC,QAAS,kBAAMd,EAAMe,YAAYf,EAAME,UCoGxEc,E,2MAlGbC,MAAQ,CACNZ,SAAU,EACVD,MAAO,EACPD,WAAY,uCACZe,W,EAIFH,YAAc,SAAAI,GACZC,QAAQC,IAAIF,GAIZ,IAFA,IAAIG,EAAY,EAAKL,MAAMC,QAEnBK,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAEhCJ,IAAcG,EAAUC,GAAGrB,MAEA,IAAzBoB,EAAUC,GAAGE,QAEd,EAAKC,SAAS,CAEZtB,MAAO,EAAKa,MAAMb,MAAO,EACzBc,QAASS,IAAO,EAAKV,MAAMC,QAAZ,eAAuBK,EAAI,CAACE,QAAS,CAACG,MAAM,MAC3DzB,WAAY,4BAMX,EAAKc,MAAMb,MAAQ,EAAKa,MAAMZ,UAC/B,EAAKqB,SAAS,CACZrB,SAAU,EAAKY,MAAMb,MACrBA,MAAO,EACPD,WAAY,iCACZe,YAEF,WACEE,QAAQC,IAAI,6BAKb,EAAKJ,MAAMb,OAAS,EAAKa,MAAMZ,UAChC,EAAKqB,SAAS,CACZtB,MAAO,EACPD,WAAY,qBACZe,YAGF,WACEE,QAAQC,IAAI,yD,EAUxBQ,aAAe,SAAAC,GACb,IAAK,IAAIP,EAAIO,EAAMN,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAMQ,EAAIC,KAAKC,MAAMD,KAAKE,UAAYX,EAAI,IACpCY,EAAOL,EAAMP,GACnBO,EAAMP,GAAKO,EAAMC,GACjBD,EAAMC,GAAKI,EAEb,OAAOL,G,wEAMC,IAAD,OAGDM,EAAiBC,KAAKpB,MAAMC,QAAQoB,KAAI,SAACpB,GAAD,OAC1C,kBAAC,EAAD,CACEP,KAAQO,EAAQP,KAChBE,MAASK,EAAQL,MACjB0B,IAAOrB,EAAQhB,GACfA,GAAMgB,EAAQhB,GACda,YAAe,EAAKA,iBAIxB,OACA,6BACE,kBAAC,EAAD,CAAQX,MAAOiC,KAAKpB,MAAMb,MAAOC,SAAYgC,KAAKpB,MAAMZ,SAAUF,WAAckC,KAAKpB,MAAMd,aACzF,kBAAC,EAAD,KACGkC,KAAKR,aAAaO,IAEvB,kBAAC,EAAD,W,GA7FUI,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0000368b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n    return (\n        <div className=\"header\">\n            <p id=\"headerLeft\"> Pics Clicky Game </p>\n            <p id=\"headerMiddle\">{props.headerText}</p>\n            <p id=\"headerRight\">Score: {props.score} | Top Score: {props.topScore} </p>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n// \nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return(\n        <div className=\"footer\">\n            <p id=\"footerleft\">Pics Clicky Game</p>\n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./style.css\";\n\nfunction PicsCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)} />\n      </div>\n    </div>\n  );\n}\n\nexport default PicsCard;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport friends from \"./friends.json\";\nimport update from \"immutability-helper\";\nimport PicsCard from \"./components/PicsCard\";\n\nclass App extends Component {\n  state = {\n    topScore: 0,\n    score: 0,\n    headerText: \"Don't click on the same image twice!\",\n    friends\n  }\n\n  // Click function to set state of image to true if clicked and reset game it image is already set to true\n  handleClick = friendsID => {\n    console.log(friendsID);\n\n    let friendArr = this.state.friends;\n\n    for(let i = 0; i < friendArr.length; i++) {\n\n      if(friendsID === friendArr[i].id) {\n\n        if(friendArr[i].clicked === false){\n\n          this.setState({\n            // update state of image to true\n            score: this.state.score +1,\n            friends: update(this.state.friends, {[i]: {clicked: {$set: true }}}),\n            headerText: \"You guessed correctly!\"\n\n          })\n          // Reset game\n        } else {\n\n          if(this.state.score > this.state.topScore) {\n            this.setState({\n              topScore: this.state.score,\n              score: 0,\n              headerText: \"Wrong! You guessed incorrectly\",\n              friends\n            },\n            () => {\n              console.log('Updated new top score!')\n            });\n\n          }\n\n          if(this.state.score <= this.state.topScore) {\n            this.setState({\n              score: 0,\n              headerText: \"You guessed wrong!\",\n              friends\n            },\n\n            () => {\n              console.log('Reset the game, you did not beat the top score!')\n            });\n          }\n\n        }\n      }\n    }\n\n  };\n// suffle the array each time image is clicked\n  shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  \n\n  // Map over this.state.friends and render a PicsCard component for each friend object\n  render() {\n  \n\n      let characterCards = this.state.friends.map((friends) =>\n        <PicsCard\n          name = {friends.name}\n          image = {friends.image}\n          key = {friends.id}\n          id = {friends.id}\n          handleClick = {this.handleClick}\n          />\n      )\n\n      return (\n      <div>\n        <Header score={this.state.score} topScore = {this.state.topScore} headerText = {this.state.headerText}/>\n          <Wrapper>\n            {this.shuffleArray(characterCards)}\n          </Wrapper>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}